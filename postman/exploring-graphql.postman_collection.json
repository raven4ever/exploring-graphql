{
	"info": {
		"_postman_id": "9afee96d-d440-4683-a6e5-e83cab8cb851",
		"name": "exploring-graphql",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10694994"
	},
	"item": [
		{
			"name": "mutations",
			"item": [
				{
					"name": "00_create_sports",
					"item": [
						{
							"name": "create_tennis",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Tennis\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"sport_tennis_id\", jsonData.data.CreateSport.id);\r",
											"    pm.expect(jsonData.data.CreateSport.name).to.eql(\"Tennis\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  CreateSport(name: \"Tennis\", description: \"Throw a ball\") {\r\n    id\r\n    name\r\n    description\r\n  }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_football",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Football\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"sport_football_id\", jsonData.data.CreateSport.id);\r",
											"    pm.expect(jsonData.data.CreateSport.name).to.eql(\"Football\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  CreateSport(name: \"Football\", description: \"Chase a ball\") {\r\n    id\r\n    name\r\n    description\r\n  }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_pool",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Pool\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"sport_pool_id\", jsonData.data.CreateSport.id);\r",
											"    pm.expect(jsonData.data.CreateSport.name).to.eql(\"Pool\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  CreateSport(name: \"Pool\", description: \"Hit a ball\") {\r\n    id\r\n    name\r\n    description\r\n  }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_sky",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Skiing\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"sport_skiing_id\", jsonData.data.CreateSport.id);\r",
											"    pm.expect(jsonData.data.CreateSport.name).to.eql(\"Skiing\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  CreateSport(name: \"Skiing\", description: \"Run from a ball\") {\r\n    id\r\n    name\r\n    description\r\n  }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "10_create_teachers",
					"item": [
						{
							"name": "create_t1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create John\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"teacher_john_id\", jsonData.data.CreateTeacher.id);\r",
											"    pm.expect(jsonData.data.CreateTeacher.name).to.eql(\"John\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  CreateTeacher(name: \"John\", age: 33) {\r\n    id\r\n    name\r\n    age\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_t2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Will\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"teacher_will_id\", jsonData.data.CreateTeacher.id);\r",
											"    pm.expect(jsonData.data.CreateTeacher.name).to.eql(\"Will\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  CreateTeacher(name: \"Will\", age: 22) {\r\n    id\r\n    name\r\n    age\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_t3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Frances\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"teacher_frances_id\", jsonData.data.CreateTeacher.id);\r",
											"    pm.expect(jsonData.data.CreateTeacher.name).to.eql(\"Frances\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  CreateTeacher(name: \"Frances\", age: 55) {\r\n    id\r\n    name\r\n    age\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_t4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Joanna\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"teacher_joanna_id\", jsonData.data.CreateTeacher.id);\r",
											"    pm.expect(jsonData.data.CreateTeacher.name).to.eql(\"Joanna\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  CreateTeacher(name: \"Joanna\", age: 27) {\r\n    id\r\n    name\r\n    age\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_t5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Maria\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"teacher_maria_id\", jsonData.data.CreateTeacher.id);\r",
											"    pm.expect(jsonData.data.CreateTeacher.name).to.eql(\"Maria\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  CreateTeacher(name: \"Maria\", age: 35) {\r\n    id\r\n    name\r\n    age\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "20_create_courses",
					"item": [
						{
							"name": "create_c1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Data Structures\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"course_ds_id\", jsonData.data.CreateCourse.id);\r",
											"    pm.expect(jsonData.data.CreateCourse.name).to.eql(\"Data Structures\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateCourse($teacher: ID!) {\r\n  CreateCourse(name: \"Data Structures\", description: \"Weird algos\", teacher: $teacher) {\r\n    id\r\n    name\r\n    description\r\n    teacher {\r\n      id\r\n      name\r\n      age\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n    \"teacher\": \"{{teacher_john_id}}\"\r\n}"
									}
								},
								"url": {
									"raw": "{{js_url}}",
									"host": [
										"{{js_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_c2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Quantum Dots\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"course_qd_id\", jsonData.data.CreateCourse.id);\r",
											"    pm.expect(jsonData.data.CreateCourse.name).to.eql(\"Quantum Dots\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateCourse($teacher: ID!) {\r\n  CreateCourse(name: \"Quantum Dots\", description: \"Monitors\", teacher: $teacher) {\r\n    id\r\n    name\r\n    description\r\n    teacher {\r\n      id\r\n      name\r\n      age\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n    \"teacher\": \"{{teacher_will_id}}\"\r\n}"
									}
								},
								"url": {
									"raw": "{{js_url}}",
									"host": [
										"{{js_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_c3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Painting\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"course_pain_id\", jsonData.data.CreateCourse.id);\r",
											"    pm.expect(jsonData.data.CreateCourse.name).to.eql(\"Painting\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateCourse($teacher: ID!) {\r\n  CreateCourse(name: \"Painting\", description: \"Nope!\", teacher: $teacher) {\r\n    id\r\n    name\r\n    description\r\n    teacher {\r\n      id\r\n      name\r\n      age\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n    \"teacher\": \"{{teacher_maria_id}}\"\r\n}"
									}
								},
								"url": {
									"raw": "{{js_url}}",
									"host": [
										"{{js_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_c4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Biology\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"course_bio_id\", jsonData.data.CreateCourse.id);\r",
											"    pm.expect(jsonData.data.CreateCourse.name).to.eql(\"Biology\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateCourse($teacher: ID!) {\r\n  CreateCourse(name: \"Biology\", description: \"Maybe\", teacher: $teacher) {\r\n    id\r\n    name\r\n    description\r\n    teacher {\r\n      id\r\n      name\r\n      age\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n    \"teacher\": \"{{teacher_frances_id}}\"\r\n}"
									}
								},
								"url": {
									"raw": "{{js_url}}",
									"host": [
										"{{js_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_c5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Poetry\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.globals.set(\"course_poet_id\", jsonData.data.CreateCourse.id);\r",
											"    pm.expect(jsonData.data.CreateCourse.name).to.eql(\"Poetry\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateCourse($teacher: ID!) {\r\n  CreateCourse(name: \"Poetry\", description: \"Sure\", teacher: $teacher) {\r\n    id\r\n    name\r\n    description\r\n    teacher {\r\n      id\r\n      name\r\n      age\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n    \"teacher\": \"{{teacher_frances_id}}\"\r\n}"
									}
								},
								"url": {
									"raw": "{{js_url}}",
									"host": [
										"{{js_url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "30_create_students",
					"item": [
						{
							"name": "create_s1",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateStudent($sports: [ID]!, $courses: [ID]!) {\r\n  CreateStudent(name: \"Andrew\", age: 18, sports: $sports, courses: $courses) {\r\n    id\r\n    name\r\n    age\r\n    sports {\r\n      id\r\n      name\r\n    }\r\n    courses {\r\n      id\r\n      name\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n   \"sports\":[\r\n      \"{{sport_football_id}}\",\r\n      \"{{sport_pool_id}}\"\r\n   ],\r\n   \"courses\":[\r\n      \"{{course_bio_id}}\",\r\n      \"{{course_qd_id}}\"\r\n   ]\r\n}"
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_s2",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateStudent($sports: [ID]!, $courses: [ID]!) {\r\n  CreateStudent(name: \"Mary\", age: 19, sports: $sports, courses: $courses) {\r\n    id\r\n    name\r\n    age\r\n    sports {\r\n      id\r\n      name\r\n    }\r\n    courses {\r\n      id\r\n      name\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n   \"sports\":[\r\n      \"{{sport_skiing_id}}\"\r\n   ],\r\n   \"courses\":[\r\n      \"{{course_pain_id}}\"\r\n   ]\r\n}"
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_s3",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateStudent($sports: [ID]!, $courses: [ID]!) {\r\n  CreateStudent(name: \"Joey\", age: 23, sports: $sports, courses: $courses) {\r\n    id\r\n    name\r\n    age\r\n    sports {\r\n      id\r\n      name\r\n    }\r\n    courses {\r\n      id\r\n      name\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n   \"sports\":[\r\n      \"{{sport_pool_id}}\",\r\n      \"{{sport_tennis_id}}\"\r\n   ],\r\n   \"courses\":[\r\n      \"{{course_poet_id}}\"\r\n   ]\r\n}"
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_s4",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateStudent($sports: [ID]!, $courses: [ID]!) {\r\n  CreateStudent(name: \"Monica\", age: 23, sports: $sports, courses: $courses) {\r\n    id\r\n    name\r\n    age\r\n    sports {\r\n      id\r\n      name\r\n    }\r\n    courses {\r\n      id\r\n      name\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n   \"sports\":[\r\n   ],\r\n   \"courses\":[\r\n      \"{{course_qd_id}}\",\r\n      \"{{course_ds_id}}\",\r\n      \"{{course_poet_id}}\"\r\n   ]\r\n}"
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_s5",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateStudent($sports: [ID]!, $courses: [ID]!) {\r\n  CreateStudent(name: \"Victor\", age: 20, sports: $sports, courses: $courses) {\r\n    id\r\n    name\r\n    age\r\n    sports {\r\n      id\r\n      name\r\n    }\r\n    courses {\r\n      id\r\n      name\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n   \"sports\":[\r\n      \"{{sport_skiing_id}}\"\r\n   ],\r\n   \"courses\":[\r\n      \"{{course_poet_id}}\",\r\n      \"{{course_pain_id}}\"\r\n   ]\r\n}"
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_s6",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateStudent($sports: [ID]!, $courses: [ID]!) {\r\n  CreateStudent(name: \"Rosa\", age: 19, sports: $sports, courses: $courses) {\r\n    id\r\n    name\r\n    age\r\n    sports {\r\n      id\r\n      name\r\n    }\r\n    courses {\r\n      id\r\n      name\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n   \"sports\":[\r\n      \"{{sport_football_id}}\",\r\n      \"{{sport_tennis_id}}\",\r\n      \"{{sport_pool_id}}\"\r\n   ],\r\n   \"courses\":[\r\n      \"{{course_ds_id}}\",\r\n      \"{{course_qd_id}}\"\r\n   ]\r\n}"
									}
								},
								"url": {
									"raw": "{{running_url}}",
									"host": [
										"{{running_url}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "queries",
			"item": [
				{
					"name": "q_sports_students",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Expect 4 sports\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.sports.length).to.eql(4);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  sports {\r\n    id\r\n    name\r\n    students {\r\n      id\r\n      name\r\n      age\r\n    }\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{running_url}}",
							"host": [
								"{{running_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "q_courses_teacher_students",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Expect 5 courses\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.courses.length).to.eql(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  courses {\r\n    id\r\n    name\r\n    teacher {\r\n      id\r\n      name\r\n    }\r\n    students {\r\n      id\r\n      name\r\n      age\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{running_url}}",
							"host": [
								"{{running_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "q_teachers_courses_students",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Expect 5 teachers\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.teachers.length).to.eql(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  teachers {\r\n    id\r\n    name\r\n    courses {\r\n      id\r\n      name\r\n      description\r\n      students {\r\n        id\r\n        name\r\n        age\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{running_url}}",
							"host": [
								"{{running_url}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "js_url",
			"value": "http://localhost:4000/graphql",
			"type": "string"
		},
		{
			"key": "running_url",
			"value": "{{js_url}}",
			"type": "string"
		}
	]
}